{
  "swagger": "2.0",
  "info": {
    "title": "Wallet Engine ",
    "description": "The wallet system that transact create wallet, debit wallet and activate and deactive the wallet and many features",
    "version": "1.0.0"
  },
  "host": "abduljeleelng-wallet-engine.herokuapp.com/api/v1",
  "basePath": "/",
  "tags": [],
  "schemes": [
    "https"
  ],
  "securityDefinitions": {
    "apiKeyAuth": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization",
      "description": "any description..."
    },
    "bearerAuth": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization",
      "scheme": "bearer",
      "bearerFormat": "JWT"
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/user/auth/signup": {
      "post": {
        "tags": [
          "User Authentication"
        ],
        "summary": "Create new user",
        "description": "Endpoint used to create a new user.",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "example": "any"
                },
                "phone": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "423": {
            "description": "Locked"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/user/auth/activate": {
      "put": {
        "tags": [
          "User Authentication"
        ],
        "summary": "Actiavte user account and create the Wallet",
        "description": "Endpoint to activate user account and create a wallet for the user",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/user/auth/signin": {
      "post": {
        "tags": [
          "User Authentication"
        ],
        "summary": "Signin user",
        "description": "Endpoint to signin user to perform transaction .",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "password": {
                  "example": "any"
                },
                "login": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/user/auth/forgetPassword": {
      "put": {
        "tags": [
          "User Authentication"
        ],
        "summary": "Password reset request for User",
        "description": "Endpoint to request for password reset token",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "login": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/user/auth/resetpassword": {
      "put": {
        "tags": [
          "User Authentication"
        ],
        "summary": "Reset password",
        "description": "Endpoint to reset password.",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "password": {
                  "example": "any"
                },
                "token": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/user/balance": {
      "get": {
        "tags": [
          "eWallet services"
        ],
        "summary": "balance",
        "description": "Endpoint to get balance in the users account.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "406": {
            "description": "Not Acceptable"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/user/debit": {
      "post": {
        "tags": [
          "eWallet services"
        ],
        "summary": "debit",
        "description": "Endpoint to make withdrawer services",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "amount": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/user/credit": {
      "post": {
        "tags": [
          "eWallet services"
        ],
        "summary": "credit",
        "description": "Endpoint to fund the wallet and get payment ",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "amount": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/user/deactivate": {
      "put": {
        "tags": [
          "eWallet services"
        ],
        "summary": "Account",
        "description": "Endpoint to deactivate user and the wallets.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    }
  },
  "definitions": {},
  "securitySchemes": {
    "bearerAuth": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization",
      "scheme": "bearer",
      "bearerFormat": "JWT"
    }
  },
  "security": {
    "bearerAuth": []
  }
}